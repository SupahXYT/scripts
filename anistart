#!/bin/sh 

help="usage:  anistart <operation>
operations:
    anistart {-s --start}
    anistart {-S --stop}
    anistart {-h --help}"

remote=( "jousd-drive:" "jousd-drive-timing:" "jousd-drive-subeki:" "jousd-drive-neocrypt:" )
mountpoint=( "/media/drive/jousd-drive-root" "/media/drive/jousd-drive-timing" "/media/drive/jousd-drive-subeki" "/media/drive/jousd-drive-neocrypt" )
flags="--ask-password=false --daemon --allow-other"

RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No color (terminate color)

remote_mount()
{
	i=0;
	while [ $i -lt "${#remote[@]}" ]; do
		printf "Mounting ${RED}${remote[$i]}${NC} to ${YELLOW}${mountpoint[$i]}${NC}\n"
		rclone mount $flags ${remote[$i]} ${mountpoint[$i]}
		i=$(( i + 1 ))
	done
}

start()
{
	RCLONE_CONFIG_PASS="$(pass rclone/config)"
        export RCLONE_CONFIG_PASS
        ping -qc1 8.8.8.8 > /dev/null 2>&1 && remote_mount || printf "An error occured. Check internet connection or fuse modules.\n"
}

stop()
{
	i=0;
	while [ $i -lt "${#mountpoint[@]}" ]; do
		printf "Unmounting ${YELLOW}${mountpoint[$i]}${NC}\n"
		fusermount -zu ${mountpoint[$i]}
		i=$(( i + 1 ))
	done

}

case $1 in
-s | --start)
        start
        ;;
-S | --stop)
        stop
        ;;
-h | --help)
        printf "%s\n" "$help"
        ;;
*)
        printf "anistart: invalid option -- '%s'\n" "$1"
        ;;
esac

